openapi: 3.1.0
info:
  title: Memory Management API
  description: API for managing and retrieving memory data.
  version: v1.0.0
servers:
  - url: https://omi.ella-ai-care.com
    description: Production server
paths:
  /memories:
    get:
      operationId: getMemories
      summary: Retrieve memories
      description: Fetch a list of memories for a specific user.
      parameters:
        - name: user_id
          in: query
          required: true
          description: The ID of the user whose memories are to be retrieved.
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: Limit the number of memories returned.
          schema:
            type: integer
        - name: include_transcripts
          in: query
          required: false
          description: Whether to include full transcripts.
          schema:
            type: boolean
      responses:
        '200':
          description: A list of memories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Memory'

  /memories/search:
    get:
      operationId: searchMemories
      summary: Search memories
      description: Search memories using semantic similarity.
      parameters:
        - name: user_id
          in: query
          required: true
          description: The ID of the user whose memories to search.
          schema:
            type: string
        - name: query
          in: query
          required: true
          description: The search query text.
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: Maximum number of results to return.
          schema:
            type: integer
            default: 5
        - name: include_details
          in: query
          required: false
          description: Whether to include full memory details in results.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchResult'

  /memories/{memory_id}:
    get:
      operationId: getMemoryDetail
      summary: Get memory detail
      description: Retrieve detailed information about a specific memory.
      parameters:
        - name: memory_id
          in: path
          required: true
          description: The ID of the memory to retrieve.
          schema:
            type: string
            format: uuid
        - name: user_id
          in: query
          required: true
          description: The ID of the user who owns the memory.
          schema:
            type: string
      responses:
        '200':
          description: Detailed memory information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Memory'
        '404':
          description: Memory not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string

components:
  schemas:
    SearchResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        structured:
          $ref: '#/components/schemas/Structured'
        status:
          type: string
        transcript_segments:
          type: array
          items:
            $ref: '#/components/schemas/TranscriptSegment'
          description: Only included when include_details is true
        plugins_results:
          type: array
          items:
            type: object
          description: Only included when include_details is true
        external_data:
          type: object
          description: Only included when include_details is true
      required: [id, structured, status]

    Memory:
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        structured:
          $ref: '#/components/schemas/Structured'
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        transcript_segments:
          type: array
          items:
            $ref: '#/components/schemas/TranscriptSegment'
        plugins_results:
          type: array
          items:
            type: object
        geolocation:
          type: object
          properties:
            lat:
              type: number
            lon:
              type: number
        photos:
          type: array
          items:
            type: string
        discarded:
          type: boolean
        deleted:
          type: boolean
        source:
          type: string
        language:
          type: string
        external_data:
          type: object
        status:
          type: string
      required: [id, created_at, structured, status]

    Structured:
      type: object
      properties:
        title:
          type: string
        overview:
          type: string
        emoji:
          type: string
        category:
          type: string
        actionItems:
          type: array
          items:
            type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
      required: [title, overview]

    Event:
      type: object
      properties:
        title:
          type: string
        created:
          type: boolean
      required: [title, created]

    TranscriptSegment:
      type: object
      properties:
        text:
          type: string
        speaker:
          type: string
        speaker_id:
          type: integer
        is_user:
          type: boolean
        start:
          type: number
        end:
          type: number
      required: [text, speaker, speaker_id, is_user, start, end] 